plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        mappings loom.layered() {
            it.officialMojangMappings()
            it.parchment("org.parchmentmc.data:parchment-1.18.2:2022.11.06@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Put repositories for dependencies here
        // ForgeGradle automatically adds the Forge maven and Maven Central for you

        // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
        // flatDir {
        //     dir 'libs'
        // }
    }

    tasks.withType(JavaCompile).configureEach {
        options.release = 17
        options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    }


    // Example for how to get properties into the manifest for reading at runtime.
    jar {
        manifest {
            attributes([
                    "Specification-Title"     : "fossil",
                    "Specification-Vendor"    : "fossilsareus",
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "fossilsareus",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

/*
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
*/
