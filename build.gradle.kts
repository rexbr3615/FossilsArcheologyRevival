@file:Suppress("UnstableApiUsage")

import net.fabricmc.loom.api.LoomGradleExtensionAPI
import java.text.SimpleDateFormat
import java.util.*

plugins {
    id("architectury-plugin") version "3.4-SNAPSHOT"
    id("dev.architectury.loom") version "1.0-SNAPSHOT" apply false
    java
}

val minecraftVersion: String by project
val modVersion: String by project
val mavenGroup: String by project
val archivesBaseName: String by project

architectury {
    minecraft = minecraftVersion
}

subprojects {
    apply(plugin = "dev.architectury.loom")

    val loom: LoomGradleExtensionAPI by extensions

    loom.silentMojangMappingsLicense()

    dependencies {
        "minecraft"("com.mojang:minecraft:$minecraftVersion")
    }
}

allprojects {
    apply(plugin = "java")
    apply(plugin = "architectury-plugin")
    apply(plugin = "maven-publish")

    version = modVersion
    group = mavenGroup

    java.toolchain.languageVersion.set(JavaLanguageVersion.of(17))

    repositories {
        maven {
            name = "ParchmentMC"
            setUrl("https://maven.parchmentmc.org")
        }

        maven {
            setUrl("https://cursemaven.com")
            content {
                includeGroup("curse.maven")
            }
        }
        maven(url="https://ladysnake.jfrog.io/artifactory/mods")
        maven(url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/")
        maven { url = uri("https://maven.shedaniel.me/") }
        maven(url="https://maven.minecraftforge.net/")
        maven(url="https://api.modrinth.com/maven")
    }

    // Include resources generated by data generators.
    sourceSets.main.configure {
        resources.srcDir("src/generated/resources")
    }

    tasks {
        withType<JavaCompile>().configureEach {
            options.release.set(17)
            options.encoding = "UTF-8" // Use the UTF-8 charset for Java compilation
        }

        jar {
            archiveBaseName.set(archivesBaseName)
            manifest {
                attributes(mapOf(
                "Specification-Title"      to "fossil",
                "Specification-Vendor"     to "fossilsareus",
                "Specification-Version"    to "1", // We are version 1 of ourselves
                "Implementation-Title"     to project.name,
                "Implementation-Version"   to archiveVersion,
                "Implementation-Vendor"    to "fossilsareus",
                "Implementation-Timestamp" to SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ").format(Date())
                ))
            }
        }
    }
}